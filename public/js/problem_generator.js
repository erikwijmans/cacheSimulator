// Generated by CoffeeScript 1.10.0
(function() {
  var Generator, genB, genE, genS, genSize, root, typeToSize;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  typeToSize = {
    char: 1,
    short: 2,
    int: 4,
    long: 8
  };

  genB = function() {
    return 1 << Math.floor(Math.random() * 3 + 3);
  };

  genS = function() {
    return 1 << Math.floor(Math.random() * 3 + 2);
  };

  genE = function() {
    return Math.floor(Math.random() * 2 + 1);
  };

  genSize = function() {
    return 2 * (Math.floor(Math.random() * 9 + 2));
  };

  root.Generator = Generator = (function() {
    function Generator() {}

    Generator.easy = function() {
      var arraySize, b, code, i, index, j, loops, type;
      i = genSize();
      j = genSize();
      index = Math.floor(Math.random() * 4);
      type = ['char', 'short', 'int', 'long'][index];
      arraySize = typeToSize[type] * i * j;
      b = genB();
      while (arraySize % b !== 0) {
        i = genSize();
        j = genSize();
        index = Math.floor(Math.random() * 4);
        type = ['char', 'short', 'int', 'long'][index];
        arraySize = typeToSize[type] * i * j;
        b = genB();
      }
      loops = ["for (int i = 0; i < " + i + "; ++i)", "for (int j = 0; j < " + j + "; ++j)"];
      index = Math.floor(Math.random() * 2);
      code = type + " array[" + i + "][" + j + "];\n\n" + loops[Math.abs(index - 1)] + " {\n  " + loops[index] + " {\n    array[i][j] = 15;\n  }\n}";
      return {
        code: code,
        s: genS(),
        b: b,
        E: genE()
      };
    };

    return Generator;

  })();

}).call(this);
