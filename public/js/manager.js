// Generated by CoffeeScript 1.10.0
(function() {
  var Manager;

  Manager = (function() {
    function Manager() {
      var div1;
      div1 = $("<div class='trace'/>").appendTo('#content');
      this.cacheHome = $("<div class='container cache'/>").appendTo($('#content'));
      this.simManager = new SimManager(this.cacheHome);
      this.logHome = $('<p class="log"/>').appendTo($('#content'));
      this.summaryHome = $("<p class='log'/>").appendTo($('#content'));
      this.codeHome = $("<textarea rows='10' cols='50'/>").attr('placeholder', 'Code goes here').appendTo(div1);
      this.traceHome = $("<textarea rows='5' cols='50'/>").attr('placeholder', "Trace goes here");
      this.simulator = null;
      $("<button/>").text("Trace").appendTo(div1).click((function(_this) {
        return function() {
          var code;
          code = _this.codeHome.val();
          return getTrace(code, function(trace) {
            var t;
            return _this.traceHome.text(((function() {
              var i, len, results;
              results = [];
              for (i = 0, len = trace.length; i < len; i++) {
                t = trace[i];
                results.push("0x" + t);
              }
              return results;
            })()).join("\n"));
          });
        };
      })(this));
      this.traceHome.appendTo(div1);
      $("<button/>").text("Simulate").appendTo(div1).click((function(_this) {
        return function() {
          var params, trace;
          trace = _this.traceHome.val().split("\n");
          params = _this.simManager.getParams();
          console.log(params);
          return getSim(trace, params, function(sim) {
            if (_this.simulator != null) {
              _this.simulator.destroy();
            }
            return _this.simulator = new CSim(params['s'], params['E'], sim, {
              parent: _this.cacheHome,
              log: _this.logHome,
              summary: _this.summaryHome
            });
          });
        };
      })(this));
    }

    return Manager;

  })();

  $(function() {
    return new Manager();
  });

}).call(this);
